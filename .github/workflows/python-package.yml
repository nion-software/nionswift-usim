# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.7, 3.8, 3.9]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Display Python version
      run: python -c "import sys; print(sys.version)"
    - name: Build Distribution
      run: |
        python -m pip install --upgrade pip
        python -m pip install wheel
        python -m setup sdist bdist_wheel
    - name: Install Test Dependencies
      run: |
        if [ -f test-requirements.txt ]; then pip install -r test-requirements.txt; fi
        python -m pip install mypy
        python -m pip install flake8
        mypy --version
    - name: Test
      run: |
        python -m unittest discover -s nionswift_plugin/usim/test/ -p '*_test.py'
        # use mypy -p to work around mypy issue 8944
        mypy --namespace-packages --ignore-missing-imports --follow-imports=silent -p nionswift_plugin.usim
